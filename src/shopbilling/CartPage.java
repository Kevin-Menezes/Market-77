/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shopbilling;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nivek
 */
public class CartPage extends javax.swing.JFrame {

    String UserTable; // USERNAME FROM MAIN PAGE 
    int count; // COUNT FOR CART NUMBER
    float count1; // COUNT1 FOR TOTAL DISCOUNTED COST
    float count2; // COUNT2 AMOUNT SAVED (DISCOUNT)
 
    
    public CartPage(String UserFromLogin) {
        initComponents();
 
        //---------------------------------------------- APP ICON --------------------------------------------------------------
        ImageIcon icon = new ImageIcon("E:\\SIES Practicals\\JAVA SWING\\SHOP_BILLING_PROJECT\\ShopBilling\\src\\shopbilling\\Option_Pane_Cart2.png");
        this.setIconImage(icon.getImage());
        
        
        
        
 //------------------------------------------------ PUTTING THE VALUES FROM DATABASE INSIDE THE CART TABLE -------------------------------------       
        DefaultTableModel model = (DefaultTableModel) CartTable.getModel();
        
        UserTable = UserFromLogin; // PUTTING USERNAME IN A VARIABLE
        
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop_billing","root","");
            
            Statement stmt = con.createStatement();
            String sqlc = "SELECT * FROM $tableName"; // WE CANT USE '"+UserTable+"' ......THATS Y WE USE REPLACE
            String sqlcc = sqlc.replace("$tableName",UserTable);
            ResultSet rs = stmt.executeQuery(sqlcc);
            
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getString(2),rs.getFloat(3),rs.getFloat(4),rs.getFloat(5),rs.getFloat(6),rs.getFloat(7)});
            }
             
        }
        catch(Exception e)
        {
            System.out.println("ERROR : "+e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BasePanel = new javax.swing.JPanel();
        RedCross = new javax.swing.JLabel();
        CART = new javax.swing.JLabel();
        CARTNUMBER = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CartTable = new javax.swing.JTable();
        GrandTotal = new javax.swing.JLabel();
        YouSaved = new javax.swing.JLabel();
        Checkout = new javax.swing.JLabel();
        PrintBill = new javax.swing.JLabel();
        TableBg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CART");
        setMinimumSize(new java.awt.Dimension(1970, 1080));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        BasePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        RedCross.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopbilling/Back_home.png"))); // NOI18N
        RedCross.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RedCross.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedCrossMouseClicked(evt);
            }
        });
        BasePanel.add(RedCross, new org.netbeans.lib.awtextra.AbsoluteConstraints(1840, 10, 70, 70));

        CART.setBackground(new java.awt.Color(244, 67, 54));
        CART.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        CART.setForeground(new java.awt.Color(0, 0, 0));
        CART.setText("   Cart");
        CART.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        CART.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CART.setOpaque(true);
        CART.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CARTMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CARTMouseExited(evt);
            }
        });
        BasePanel.add(CART, new org.netbeans.lib.awtextra.AbsoluteConstraints(1670, 25, 75, 50));

        CARTNUMBER.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        CARTNUMBER.setForeground(new java.awt.Color(0, 0, 0));
        CARTNUMBER.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CARTNUMBER.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        BasePanel.add(CARTNUMBER, new org.netbeans.lib.awtextra.AbsoluteConstraints(1741, 25, 60, 50));

        jScrollPane1.setBorder(null);

        CartTable.setAutoCreateRowSorter(true);
        CartTable.setForeground(new java.awt.Color(0, 0, 0));
        CartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Amount", "Quantity", "Final Cost", "Discount", "Discounted Final Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CartTable.setColumnSelectionAllowed(false);
        CartTable.setGridColor(new java.awt.Color(0, 0, 0));
        CartTable.setIntercellSpacing(new java.awt.Dimension(10, 10));
        CartTable.setOpaque(false);
        CartTable.setRowHeight(30);
        CartTable.setRowSelectionAllowed(false);
        CartTable.setRowSorter(null);
        CartTable.setSelectionBackground(new java.awt.Color(244, 67, 54));
        CartTable.setShowHorizontalLines(false);
        CartTable.setShowVerticalLines(false);
        CartTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(CartTable);
        if (CartTable.getColumnModel().getColumnCount() > 0) {
            CartTable.getColumnModel().getColumn(0).setResizable(false);
            CartTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            CartTable.getColumnModel().getColumn(1).setResizable(false);
            CartTable.getColumnModel().getColumn(2).setResizable(false);
            CartTable.getColumnModel().getColumn(2).setPreferredWidth(10);
            CartTable.getColumnModel().getColumn(3).setResizable(false);
            CartTable.getColumnModel().getColumn(3).setPreferredWidth(10);
            CartTable.getColumnModel().getColumn(4).setResizable(false);
            CartTable.getColumnModel().getColumn(4).setPreferredWidth(10);
            CartTable.getColumnModel().getColumn(5).setResizable(false);
            CartTable.getColumnModel().getColumn(5).setPreferredWidth(10);
        }

        BasePanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 1860, 810));

        GrandTotal.setBackground(new java.awt.Color(244, 67, 54));
        GrandTotal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        GrandTotal.setForeground(new java.awt.Color(0, 0, 0));
        GrandTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GrandTotal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        GrandTotal.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        GrandTotal.setOpaque(true);
        GrandTotal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GrandTotalMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                GrandTotalMouseExited(evt);
            }
        });
        BasePanel.add(GrandTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 940, 400, 60));

        YouSaved.setBackground(new java.awt.Color(244, 67, 54));
        YouSaved.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        YouSaved.setForeground(new java.awt.Color(0, 0, 0));
        YouSaved.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YouSaved.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        YouSaved.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        YouSaved.setOpaque(true);
        YouSaved.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                YouSavedMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                YouSavedMouseExited(evt);
            }
        });
        BasePanel.add(YouSaved, new org.netbeans.lib.awtextra.AbsoluteConstraints(1490, 940, 400, 60));

        Checkout.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Checkout.setForeground(new java.awt.Color(0, 0, 0));
        Checkout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Checkout.setText("CHECKOUT");
        Checkout.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        Checkout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Checkout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CheckoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CheckoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CheckoutMouseExited(evt);
            }
        });
        BasePanel.add(Checkout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1480, 25, 160, 50));

        PrintBill.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        PrintBill.setForeground(new java.awt.Color(0, 0, 0));
        PrintBill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PrintBill.setText("PRINT BILL");
        PrintBill.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 4, true));
        PrintBill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PrintBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrintBillMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PrintBillMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PrintBillMouseExited(evt);
            }
        });
        BasePanel.add(PrintBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 25, 160, 50));

        TableBg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shopbilling/Table_bg.jpg"))); // NOI18N
        BasePanel.add(TableBg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1970, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BasePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//--------------------------------------------------------- CLICKING THE HOME BUTTON --------------------------------------------------------------------
    private void RedCrossMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RedCrossMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_RedCrossMouseClicked

    
//--------------------------------------------------------- HOVER OVER CART BUTTON ------------------------------------------------------------------------------    
    private void CARTMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CARTMouseEntered
        CART.setBackground(new java.awt.Color(244, 68, 54));
        CART.setOpaque(false);
    }//GEN-LAST:event_CARTMouseEntered

    private void CARTMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CARTMouseExited
        CART.setBackground(new java.awt.Color(244, 67, 54));
        CART.setOpaque(true);
    }//GEN-LAST:event_CARTMouseExited

    
// ---------------------------------------- ON OPENING CART PAGE REFRESHING CART NUMBER FOR THAT PARTICULAR USER-------------------------------------------------------------
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try // JDBC CONNECTION FOR DISPLAYING CART NUMBER ON THE MAIN PAGE BASED ON THE PARTICULAR USER ACCOUNT
                    {
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop_billing","root","");
                        
                        // FOR DISPLAYING CART NUMBER 
                        String sqlc = "SELECT COUNT(item_name) FROM $tableName"; // WE CANT USE '"+UserTable+"' ......THATS Y WE USE REPLACE
                        String sqlcc = sqlc.replace("$tableName",UserTable);
                        PreparedStatement pstmtc = con.prepareStatement(sqlcc);
                        ResultSet rs = pstmtc.executeQuery();
                        rs.next(); // MOVES POINTER TO FIRST POSITION
                        count = rs.getInt(1); // TAKES THE INTEGER VALUE IN FIRST COLUMN WHICH IS THE COUNT VALUE
                        CARTNUMBER.setText(Integer.toString(count));
                        
                        
                        // TAKING SUM FROM DATABASE
                        String sql1 = "SELECT SUM(discounted_final_cost) FROM $tableName"; // WE CANT USE '"+UserTable+"' ......THATS Y WE USE REPLACE
                        String sql11 = sql1.replace("$tableName",UserTable);
                        PreparedStatement pstmtc1 = con.prepareStatement(sql11);
                        ResultSet rs1 = pstmtc1.executeQuery();
                        rs1.next(); // MOVES POINTER TO FIRST POSITION
                        count1 = rs1.getFloat(1); // TAKES THE INTEGER VALUE IN FIRST COLUMN WHICH IS THE COUNT VALUE
                        Float.toString(count1);
                        GrandTotal.setText("GRAND TOTAL : Rs"+count1+"");
                        
                        
                        // TAKING DISCOUNT FROM DATABASE
                        String sql2 = "SELECT SUM(item_discount) FROM $tableName"; // WE CANT USE '"+UserTable+"' ......THATS Y WE USE REPLACE
                        String sql22 = sql2.replace("$tableName",UserTable);
                        PreparedStatement pstmtc2 = con.prepareStatement(sql22);
                        ResultSet rs2 = pstmtc2.executeQuery();
                        rs2.next(); // MOVES POINTER TO FIRST POSITION
                        count2 = rs2.getFloat(1); // TAKES THE INTEGER VALUE IN FIRST COLUMN WHICH IS THE COUNT VALUE
                        Float.toString(count2);
                        YouSaved.setText("YOU SAVED : Rs"+count2+"");
                        
                    }    
                    catch(SQLException | ClassNotFoundException e) // EITHER SQL EXCEPTION OR CLASS NOT FOUND EXCEPTION
                    {
                        System.out.println("ERROR : "+e);
                    }
        
    }//GEN-LAST:event_formWindowOpened

    
// ------------------------------------------------------ IGNORE THESE LINES ---------------------------------------------------------------------------------
    private void GrandTotalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrandTotalMouseEntered

    }//GEN-LAST:event_GrandTotalMouseEntered

    private void GrandTotalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrandTotalMouseExited

    }//GEN-LAST:event_GrandTotalMouseExited

    private void YouSavedMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YouSavedMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_YouSavedMouseEntered

    private void YouSavedMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YouSavedMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_YouSavedMouseExited
// ----------------------------------------------------------------------------------------------------------------------------------------------------
 
    
    
// ------------------------------------------------------- HOVER OF CHECKOUT ------------------------------------------------------------------------    
    private void CheckoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckoutMouseEntered
        Checkout.setBackground(new java.awt.Color(244, 67, 54));
        Checkout.setOpaque(true);
    }//GEN-LAST:event_CheckoutMouseEntered

    private void CheckoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckoutMouseExited
        Checkout.setBackground(new java.awt.Color(244, 68, 54));
        Checkout.setOpaque(false);
    }//GEN-LAST:event_CheckoutMouseExited

// ------------------------------------------------------ ON CLICKING CHECKOUT -------------------------------------------------------------------------
    private void CheckoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CheckoutMouseClicked
        
        String[] pay = {"Cash On Delivery","Net Banking","Credit Card","UPI","Gift Card"};
        
        ImageIcon icon1 = new ImageIcon("E:\\SIES Practicals\\JAVA SWING\\SHOP_BILLING_PROJECT\\ShopBilling\\src\\shopbilling\\Payment.png");
        ImageIcon icon2 = new ImageIcon("E:\\SIES Practicals\\JAVA SWING\\SHOP_BILLING_PROJECT\\ShopBilling\\src\\shopbilling\\Green_Tick_Mark.png");
        ImageIcon icon3 = new ImageIcon("E:\\SIES Practicals\\JAVA SWING\\SHOP_BILLING_PROJECT\\ShopBilling\\src\\shopbilling\\Happy_smiley.png");
        ImageIcon icon4 = new ImageIcon("E:\\SIES Practicals\\JAVA SWING\\SHOP_BILLING_PROJECT\\ShopBilling\\src\\shopbilling\\Online_Payment.png");
        
        String payment = (String) JOptionPane.showInputDialog(this,"Choose Payment Methods","Checkout!",JOptionPane.WARNING_MESSAGE,icon1,pay,pay[0]); // TAKING QUANTITY FROM USER
        
        // IF USER SELECTS CASH ON DELIVERY...THEN PAYMENT WILL BE DONE LATER
        if(payment=="Cash On Delivery")
        {
           JOptionPane.showMessageDialog(null,"Payment of Rs'"+Float.toString(count1)+"' to be made on delivery","Order Placed!",JOptionPane.PLAIN_MESSAGE,icon2);
       
           int Select = JOptionPane.showOptionDialog(this,"Do you want to continue shopping?","THANKS FOR SHOPPING '"+UserTable.toUpperCase()+"'!",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,icon3,null,null);
        
           if(Select==0 || Select==-1) // 0 MEANS 1st OPTION.....WE RETURN BACK TO HOME
           {
               try
                    {
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop_billing","root","");
                        
                        // FOR DELETING ALL THE ITEMS FROM THE CART AFTER PAYMENT IS DONE
                        String sql = "DELETE * FROM $tableName WHERE item_id>=1"; // WE CANT USE '"+UserTable+"' ......THATS Y WE USE REPLACE
                        String sql1 = sql.replace("$tableName",UserTable);
                        PreparedStatement pstmt = con.prepareStatement(sql1);
                        pstmt.executeUpdate();
                        
                    }
               catch(SQLException | ClassNotFoundException e) // EITHER SQL EXCEPTION OR CLASS NOT FOUND EXCEPTION
                    {
                        System.out.println("ERROR : "+e);
                    }
               
               this.setVisible(false);
//               new DailyStaples("").setVisible(false);
//               new DairyStuff("").setVisible(false);
//               new PackagedFood("").setVisible(false);
               //new MainPage("").setVisible(true);
           }
           else // WE EXIT THE SYSTEM
           {
               try
                    {
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop_billing","root","");
                        
                        // FOR DELETING ALL THE ITEMS FROM THE CART AFTER PAYMENT IS DONE
                        String sql = "DELETE FROM $tableName WHERE item_id>=1"; // WE CANT USE '"+UserTable+"' ......THATS Y WE USE REPLACE
                        String sql1 = sql.replace("$tableName",UserTable);
                        PreparedStatement pstmt = con.prepareStatement(sql1);
                        pstmt.executeUpdate();
                        
                    }
               catch(SQLException | ClassNotFoundException e) // EITHER SQL EXCEPTION OR CLASS NOT FOUND EXCEPTION
                    {
                        System.out.println("ERROR : "+e);
                    }
               
               System.exit(0);
           }
        
    }//GEN-LAST:event_CheckoutMouseClicked
    // IF ANY OTHER MODE OF PAYMENT IS CHOOSEN
    if(payment=="Net Banking" || payment=="Credit Card" || payment=="UPI" || payment=="Gift Card")
    {
            JOptionPane.showMessageDialog(null,"Payment of Rs'"+Float.toString(count1)+"' to be done","'"+payment+"'",JOptionPane.PLAIN_MESSAGE,icon4);
            
            JOptionPane.showMessageDialog(null,"Payment Done. Rs'"+Float.toString(count1)+"' deducted from your bank account.","Order Placed!",JOptionPane.PLAIN_MESSAGE,icon2);
            
            int Select = JOptionPane.showOptionDialog(this,"Do you want to continue shopping?","THANKS FOR SHOPPING '"+UserTable.toUpperCase()+"'!",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE,icon3,null,null);
        
            if(Select==0 || Select==-1) // 0 MEANS 1st OPTION.... -1 MEANS CANCEL...WE RETURN BACK TO HOME
            {
               try
                    {
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop_billing","root","");
                        
                        // FOR DELETING ALL THE ITEMS FROM THE CART AFTER PAYMENT IS DONE
                        String sql = "DELETE FROM $tableName WHERE item_id>=1"; // WE CANT USE '"+UserTable+"' ......THATS Y WE USE REPLACE
                        String sql1 = sql.replace("$tableName",UserTable);
                        PreparedStatement pstmt = con.prepareStatement(sql1);
                        pstmt.executeUpdate();
                        
                    }
               catch(SQLException | ClassNotFoundException e) // EITHER SQL EXCEPTION OR CLASS NOT FOUND EXCEPTION
                    {
                        System.out.println("ERROR : "+e);
                    }
               
               this.setVisible(false);
//               new DailyStaples("").setVisible(false);
//               new DairyStuff("").setVisible(false);
//               new PackagedFood("").setVisible(false);
               //new MainPage("").setVisible(true);
            }
            else // WE EXIT THE SYSTEM
            {
               try
                    {
                        Class.forName("com.mysql.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/shop_billing","root","");
                        
                        // FOR DELETING ALL THE ITEMS FROM THE CART AFTER PAYMENT IS DONE
                        String sql = "DELETE * FROM $tableName"; // WE CANT USE '"+UserTable+"' ......THATS Y WE USE REPLACE
                        String sql1 = sql.replace("$tableName",UserTable);
                        PreparedStatement pstmt = con.prepareStatement(sql1);
                        pstmt.executeUpdate();
                        
                    }
               catch(SQLException | ClassNotFoundException e) // EITHER SQL EXCEPTION OR CLASS NOT FOUND EXCEPTION
                    {
                        System.out.println("ERROR : "+e);
                    }
               
               System.exit(0);
            }
        
        }
        
  }
        
    private void PrintBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintBillMouseClicked
        printRecord(BasePanel);
    }//GEN-LAST:event_PrintBillMouseClicked

    private void PrintBillMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintBillMouseEntered
        PrintBill.setBackground(new java.awt.Color(244, 67, 54));
        PrintBill.setOpaque(true);
    }//GEN-LAST:event_PrintBillMouseEntered

    private void PrintBillMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrintBillMouseExited
        PrintBill.setBackground(new java.awt.Color(244, 68, 54));
        PrintBill.setOpaque(false);
    }//GEN-LAST:event_PrintBillMouseExited
      
        
    
    
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CartPage().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BasePanel;
    private javax.swing.JLabel CART;
    private javax.swing.JLabel CARTNUMBER;
    private javax.swing.JTable CartTable;
    private javax.swing.JLabel Checkout;
    private javax.swing.JLabel GrandTotal;
    private javax.swing.JLabel PrintBill;
    private javax.swing.JLabel RedCross;
    private javax.swing.JLabel TableBg;
    private javax.swing.JLabel YouSaved;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

// -------------------------------------------------------------- PRINT BILL --------------------------------------------------------------------------    
    private void printRecord(JPanel panel)
    {
         PrinterJob job = PrinterJob.getPrinterJob();
        
        job.setJobName("Print Bill");
        
        job.setPrintable(new Printable()
                {
                    public int print(Graphics graphics,PageFormat pageFormat,int pageIndex) throws PrinterException {
                        
                        if(pageIndex>0)
                        {
                            return Printable.NO_SUCH_PAGE;                            
                        }
                        
                        Graphics2D graphics2D = (Graphics2D)graphics;
                        
                        graphics2D.translate(pageFormat.getImageableX(),pageFormat.getImageableY());
                            
                        graphics2D.scale(0.3,0.3);
                        
                        panel.paint(graphics2D);
                        
                        return Printable.PAGE_EXISTS;
                        
                    }
                });
                
                boolean returningResult = job.printDialog();
                
                if(returningResult)
                {
                    try
                    {
                        job.print();
                    }
                    catch(PrinterException p)
                    {
                        JOptionPane.showMessageDialog(this,"Print Error : "+p.getMessage(),"Oops!",JOptionPane.ERROR_MESSAGE);
                    }
                }
    }
    
    

}
